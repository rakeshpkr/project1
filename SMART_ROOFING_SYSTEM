#define BLYNK_TEMPLATE_ID "TMPL3pi6IWoeg"
#define BLYNK_TEMPLATE_NAME "ROOF REMOTE"
#define BLYNK_AUTH_TOKEN "jyTaikFmGM_iivMid76OSpC2geTYaMm6"
#define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
//motor pins
#define A1 D1
#define A2 D2
#define B1 D3
#define B2 D4
#define rain D5
#define trig D6
#define echo D7
#define ir D8
// Variables for the Blynk widget values
int x;
int y;
int z;
int val;
int irval;
long duration;
float distance;
char auth[] = "jyTaikFmGM_iivMid76OSpC2geTYaMm6";
char ssid[] = "Couldn't connect";
char pass[] = "RAKESHDINESH";


void setup() 
{
  Serial.begin(9600);
  pinMode(A1, OUTPUT);
  pinMode(A2, OUTPUT);
  pinMode(B1, OUTPUT);
  pinMode(B2, OUTPUT);
  pinMode(rain, INPUT);
  pinMode(trig, OUTPUT);
  pinMode(echo, INPUT);
  pinMode(ir, INPUT);

  Blynk.begin(auth, ssid, pass, "blynk.cloud", 80);
}

BLYNK_WRITE(V0) 
{
  x = param.asInt();
}

BLYNK_WRITE(V1)
{
  y = param.asInt();
}
BLYNK_WRITE(V2)
{
  z = param.asInt();
}

void loop() 
{
  Blynk.run();
  if(z==0)
  {
  irval= digitalRead(ir);
  digitalWrite(D8, HIGH);
  // Clears the trigPin
  digitalWrite(trig, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trig, HIGH);
  delayMicroseconds(10);
  digitalWrite(trig, LOW);
  delayMicroseconds(15);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echo, HIGH);
  
  // Calculate the distance
  distance = duration * 0.034 / 2;
  Serial.println(val);
  Serial.print("Distance (cm): ");
  Serial.println(distance);
  delay(1000);
  val= digitalRead(rain);
  if (val==1)
  {
    opening();
  }
  if(val==0)
  {
    closing();
  }
  if(distance<10 && val==0)
  {
    stopping();
  }
  if(irval==1 && val==1)
  {
    stopping();
  }
  }
  if(z==1)
  {
    if(x==1)
    {
      opening();
    }
    if(y==1)
    {
      closing();
    }
    if(x==0 && y==0)
    {
      stopping();
    }
  }
}
void opening()
{
    digitalWrite(A1, LOW);
    digitalWrite(A2, HIGH);
    digitalWrite(B1, HIGH);
    digitalWrite(B2, LOW);
}
void closing()
{
    digitalWrite(A1, HIGH);
    digitalWrite(A2, LOW);
    digitalWrite(B1, LOW);
    digitalWrite(B2, HIGH);
}
void stopping()
{
    digitalWrite(A1, LOW);
    digitalWrite(A2, LOW);
    digitalWrite(B1, LOW);
    digitalWrite(B2, LOW);
}
